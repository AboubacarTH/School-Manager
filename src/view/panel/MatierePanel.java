/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.panel;

import bean.Annee;
import bean.Classe;
import bean.Cycle;
import bean.Matiere;
import bean.MatiereClasse;
import bean.MatiereType;
import bean.Professeur;
import bean.ProfesseurMatiereClasse;
import java.awt.Color;
import java.awt.Component;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.AbstractCellEditor;
import javax.swing.ButtonModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import static main.Main.getController;
import static main.Main.getDroit;
import view.dialog.MatiereClasseDialog;
import view.dialog.MatiereDialog;
import view.dialog.MatiereTypeDialog;
import view.dialog.ProfesseurMatiereClasseDialog;

/**
 *
 * @author ATH
 */
public class MatierePanel extends javax.swing.JPanel {

    /**
     * Creates new form Matiere
     */
    public MatierePanel() {
        id_cb_matiere_types = new HashMap<>();
        id_table_matiere_types = new HashMap<>();
        id_table_matiere_matieres = new HashMap<>();
        id_cb_matiere_classe_annees = new HashMap<>();
        id_cb_matiere_classe_cycles = new HashMap<>();
        id_cb_matiere_classe_classes = new HashMap<>();
        id_cb_matiere_classe_matieres = new HashMap<>();
        id_cb_matiere_classe_types = new HashMap<>();
        id_table_matiere_classes = new HashMap<>();
        id_cb_matiere_enseignant_classe_annees = new HashMap<>();
        id_cb_matiere_enseignant_classe_cycles = new HashMap<>();
        id_cb_matiere_enseignant_classe_types = new HashMap<>();
        id_cb_matiere_enseignant_classe_classes = new HashMap<>();
        id_cb_matiere_enseignant_classe_matieres = new HashMap<>();
        id_table_matiere_enseignant_classes = new HashMap<>();
        initComponents();
        init_combo_box_type();
        init_combo_box_annee();
        init_combo_box_cycle();
        init_combo_box_classe();
        init_combo_box_mec_classe();
        init_combo_box_matiere();
        init_combo_box_mec_matiere();
        table_matiere_type();
        table_matiere_matiere();
        table_matiere_classe();
        table_matiere_classe_professeur();
        popup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup_type = new javax.swing.JPopupMenu();
        menu_item_type_add = new javax.swing.JMenuItem();
        menu_item_type_update = new javax.swing.JMenuItem();
        menu_item_type_remove = new javax.swing.JMenuItem();
        popup_matiere = new javax.swing.JPopupMenu();
        menu_item_matiere_add = new javax.swing.JMenuItem();
        menu_item_matiere_update = new javax.swing.JMenuItem();
        menu_item_matiere_remove = new javax.swing.JMenuItem();
        popup_matiere_classe = new javax.swing.JPopupMenu();
        menu_item_matiere_classe_add = new javax.swing.JMenuItem();
        menu_item_matiere_classe_update = new javax.swing.JMenuItem();
        menu_item_matiere_classe_remove = new javax.swing.JMenuItem();
        popup_matiere_classe_professeur = new javax.swing.JPopupMenu();
        menu_item_matiere_classe_professeur_add = new javax.swing.JMenuItem();
        menu_item_matiere_classe_professeur_update = new javax.swing.JMenuItem();
        menu_item_matiere_classe_professeur_remove = new javax.swing.JMenuItem();
        tabbed_pane = new javax.swing.JTabbedPane();
        panel_matiere = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        combo_box_matiere_type = new javax.swing.JComboBox<>();
        scroll_pane_type = new javax.swing.JScrollPane();
        table_matiere_type = new javax.swing.JTable();
        scroll_pane_matiere = new javax.swing.JScrollPane();
        table_matiere_matiere = new javax.swing.JTable();
        panel_matiere_classe = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        combo_box_matiere_classe_annee = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        combo_box_matiere_classe_cycle = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        combo_box_matiere_classe_classe = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        combo_box_matiere_classe_matiere = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        text_field_matiere_classe_rechercher = new javax.swing.JTextField();
        scroll_pane_matiere_classe = new javax.swing.JScrollPane();
        table_matiere_classe = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        combo_box_matiere_classe_type = new javax.swing.JComboBox<>();
        panel_matiere_classe_professeur = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        combo_box_matiere_enseignant_classe_annee = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        combo_box_matiere_enseignant_classe_cycle = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        combo_box_matiere_enseignant_classe_classe = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        combo_box_matiere_enseignant_classe_type = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        combo_box_matiere_enseignant_classe_matiere = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        text_field_matiere_enseignant_classe_rechercher = new javax.swing.JTextField();
        scroll_pane_matiere_classe_professeur = new javax.swing.JScrollPane();
        table_matiere_enseignant_classe = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();

        menu_item_type_add.setText("Ajouter");
        menu_item_type_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_type_addActionPerformed(evt);
            }
        });
        popup_type.add(menu_item_type_add);

        menu_item_type_update.setText("Mettre à jour");
        menu_item_type_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_type_updateActionPerformed(evt);
            }
        });
        popup_type.add(menu_item_type_update);

        menu_item_type_remove.setText("Suprimer");
        menu_item_type_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_type_removeActionPerformed(evt);
            }
        });
        popup_type.add(menu_item_type_remove);

        menu_item_matiere_add.setText("Ajouter");
        menu_item_matiere_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_matiere_addActionPerformed(evt);
            }
        });
        popup_matiere.add(menu_item_matiere_add);

        menu_item_matiere_update.setText("Mettre à jour");
        menu_item_matiere_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_matiere_updateActionPerformed(evt);
            }
        });
        popup_matiere.add(menu_item_matiere_update);

        menu_item_matiere_remove.setText("Suprimer");
        menu_item_matiere_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_matiere_removeActionPerformed(evt);
            }
        });
        popup_matiere.add(menu_item_matiere_remove);

        menu_item_matiere_classe_add.setText("Ajouter");
        menu_item_matiere_classe_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_matiere_classe_addActionPerformed(evt);
            }
        });
        popup_matiere_classe.add(menu_item_matiere_classe_add);

        menu_item_matiere_classe_update.setText("Mettre à jour");
        menu_item_matiere_classe_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_matiere_classe_updateActionPerformed(evt);
            }
        });
        popup_matiere_classe.add(menu_item_matiere_classe_update);

        menu_item_matiere_classe_remove.setText("Suprimer");
        menu_item_matiere_classe_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_matiere_classe_removeActionPerformed(evt);
            }
        });
        popup_matiere_classe.add(menu_item_matiere_classe_remove);

        menu_item_matiere_classe_professeur_add.setText("Ajouter");
        menu_item_matiere_classe_professeur_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_matiere_classe_professeur_addActionPerformed(evt);
            }
        });
        popup_matiere_classe_professeur.add(menu_item_matiere_classe_professeur_add);

        menu_item_matiere_classe_professeur_update.setText("Mettre à jour");
        menu_item_matiere_classe_professeur_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_matiere_classe_professeur_updateActionPerformed(evt);
            }
        });
        popup_matiere_classe_professeur.add(menu_item_matiere_classe_professeur_update);

        menu_item_matiere_classe_professeur_remove.setText("Suprimer");
        menu_item_matiere_classe_professeur_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_matiere_classe_professeur_removeActionPerformed(evt);
            }
        });
        popup_matiere_classe_professeur.add(menu_item_matiere_classe_professeur_remove);

        tabbed_pane.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabbed_pane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabbed_paneStateChanged(evt);
            }
        });

        jLabel1.setText("Type matière :");

        combo_box_matiere_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_matiere_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_matiere_typeActionPerformed(evt);
            }
        });

        table_matiere_type.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "N°", "Type", "Nombre Total Matière", "Option"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scroll_pane_type.setViewportView(table_matiere_type);
        if (table_matiere_type.getColumnModel().getColumnCount() > 0) {
            table_matiere_type.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_matiere_type.getColumnModel().getColumn(0).setMaxWidth(35);
            table_matiere_type.getColumnModel().getColumn(2).setPreferredWidth(150);
            table_matiere_type.getColumnModel().getColumn(2).setMaxWidth(200);
            table_matiere_type.getColumnModel().getColumn(3).setMinWidth(185);
            table_matiere_type.getColumnModel().getColumn(3).setPreferredWidth(185);
            table_matiere_type.getColumnModel().getColumn(3).setMaxWidth(185);
        }

        table_matiere_matiere.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "N°", "Matière", "Type", "Option"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scroll_pane_matiere.setViewportView(table_matiere_matiere);
        if (table_matiere_matiere.getColumnModel().getColumnCount() > 0) {
            table_matiere_matiere.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_matiere_matiere.getColumnModel().getColumn(0).setMaxWidth(35);
            table_matiere_matiere.getColumnModel().getColumn(2).setPreferredWidth(250);
            table_matiere_matiere.getColumnModel().getColumn(2).setMaxWidth(300);
            table_matiere_matiere.getColumnModel().getColumn(3).setMinWidth(185);
            table_matiere_matiere.getColumnModel().getColumn(3).setPreferredWidth(185);
            table_matiere_matiere.getColumnModel().getColumn(3).setMaxWidth(185);
        }

        javax.swing.GroupLayout panel_matiereLayout = new javax.swing.GroupLayout(panel_matiere);
        panel_matiere.setLayout(panel_matiereLayout);
        panel_matiereLayout.setHorizontalGroup(
            panel_matiereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_matiereLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_matiereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scroll_pane_type, javax.swing.GroupLayout.DEFAULT_SIZE, 814, Short.MAX_VALUE)
                    .addGroup(panel_matiereLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_box_matiere_type, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scroll_pane_matiere))
                .addContainerGap())
        );
        panel_matiereLayout.setVerticalGroup(
            panel_matiereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_matiereLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_matiereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combo_box_matiere_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(scroll_pane_type, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scroll_pane_matiere, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbed_pane.addTab("Matière", panel_matiere);

        jLabel2.setText("Année scolaire :");

        combo_box_matiere_classe_annee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_matiere_classe_annee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_matiere_classe_anneeActionPerformed(evt);
            }
        });

        jLabel3.setText("Cycle :");

        combo_box_matiere_classe_cycle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_matiere_classe_cycle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_matiere_classe_cycleActionPerformed(evt);
            }
        });

        jLabel4.setText("Classe :");

        combo_box_matiere_classe_classe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_matiere_classe_classe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_matiere_classe_classeActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel5.setText("Matière :");

        combo_box_matiere_classe_matiere.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_matiere_classe_matiere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_matiere_classe_matiereActionPerformed(evt);
            }
        });

        jLabel6.setText("Rechercher :");

        table_matiere_classe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "N°", "Classe", "Matière", "Type", "Coefficient", "Volume hor.", "Option"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scroll_pane_matiere_classe.setViewportView(table_matiere_classe);
        if (table_matiere_classe.getColumnModel().getColumnCount() > 0) {
            table_matiere_classe.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_matiere_classe.getColumnModel().getColumn(0).setMaxWidth(35);
            table_matiere_classe.getColumnModel().getColumn(1).setPreferredWidth(100);
            table_matiere_classe.getColumnModel().getColumn(1).setMaxWidth(100);
            table_matiere_classe.getColumnModel().getColumn(3).setPreferredWidth(250);
            table_matiere_classe.getColumnModel().getColumn(3).setMaxWidth(300);
            table_matiere_classe.getColumnModel().getColumn(4).setPreferredWidth(100);
            table_matiere_classe.getColumnModel().getColumn(4).setMaxWidth(120);
            table_matiere_classe.getColumnModel().getColumn(5).setPreferredWidth(150);
            table_matiere_classe.getColumnModel().getColumn(5).setMaxWidth(200);
            table_matiere_classe.getColumnModel().getColumn(6).setMinWidth(185);
            table_matiere_classe.getColumnModel().getColumn(6).setPreferredWidth(185);
            table_matiere_classe.getColumnModel().getColumn(6).setMaxWidth(185);
        }

        jLabel7.setText("Type de matière :");

        combo_box_matiere_classe_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_matiere_classe_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_matiere_classe_typeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_matiere_classeLayout = new javax.swing.GroupLayout(panel_matiere_classe);
        panel_matiere_classe.setLayout(panel_matiere_classeLayout);
        panel_matiere_classeLayout.setHorizontalGroup(
            panel_matiere_classeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_matiere_classeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_matiere_classeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_matiere_classeLayout.createSequentialGroup()
                        .addGroup(panel_matiere_classeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_matiere_classeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(combo_box_matiere_classe_cycle, 0, 200, Short.MAX_VALUE)
                            .addComponent(combo_box_matiere_classe_classe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combo_box_matiere_classe_annee, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(17, 17, 17)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_matiere_classeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_matiere_classeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combo_box_matiere_classe_matiere, 0, 227, Short.MAX_VALUE)
                            .addComponent(combo_box_matiere_classe_type, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(text_field_matiere_classe_rechercher))
                        .addGap(176, 176, 176))
                    .addComponent(scroll_pane_matiere_classe))
                .addContainerGap())
        );
        panel_matiere_classeLayout.setVerticalGroup(
            panel_matiere_classeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_matiere_classeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_matiere_classeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_matiere_classeLayout.createSequentialGroup()
                        .addGroup(panel_matiere_classeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(combo_box_matiere_classe_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_matiere_classeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(combo_box_matiere_classe_matiere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_matiere_classeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text_field_matiere_classe_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addComponent(jSeparator1)
                    .addGroup(panel_matiere_classeLayout.createSequentialGroup()
                        .addGroup(panel_matiere_classeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combo_box_matiere_classe_annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_matiere_classeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(combo_box_matiere_classe_cycle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_matiere_classeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(combo_box_matiere_classe_classe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(scroll_pane_matiere_classe, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbed_pane.addTab("Matière par classe", panel_matiere_classe);

        jLabel8.setText("Année scolaire :");

        combo_box_matiere_enseignant_classe_annee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_matiere_enseignant_classe_annee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_matiere_enseignant_classe_anneeActionPerformed(evt);
            }
        });

        jLabel9.setText("Cycle :");

        combo_box_matiere_enseignant_classe_cycle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_matiere_enseignant_classe_cycle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_matiere_enseignant_classe_cycleActionPerformed(evt);
            }
        });

        jLabel10.setText("Classe :");

        combo_box_matiere_enseignant_classe_classe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_matiere_enseignant_classe_classe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_matiere_enseignant_classe_classeActionPerformed(evt);
            }
        });

        jLabel11.setText("Type de matière :");

        combo_box_matiere_enseignant_classe_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_matiere_enseignant_classe_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_matiere_enseignant_classe_typeActionPerformed(evt);
            }
        });

        jLabel12.setText("Matière :");

        combo_box_matiere_enseignant_classe_matiere.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_matiere_enseignant_classe_matiere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_matiere_enseignant_classe_matiereActionPerformed(evt);
            }
        });

        jLabel13.setText("Rechercher :");

        table_matiere_enseignant_classe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "N°", "Classe", "Matricule", "Enseignant", "Matière", "N° Tel.", "Option"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scroll_pane_matiere_classe_professeur.setViewportView(table_matiere_enseignant_classe);
        if (table_matiere_enseignant_classe.getColumnModel().getColumnCount() > 0) {
            table_matiere_enseignant_classe.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_matiere_enseignant_classe.getColumnModel().getColumn(0).setMaxWidth(35);
            table_matiere_enseignant_classe.getColumnModel().getColumn(1).setPreferredWidth(100);
            table_matiere_enseignant_classe.getColumnModel().getColumn(1).setMaxWidth(100);
            table_matiere_enseignant_classe.getColumnModel().getColumn(2).setPreferredWidth(100);
            table_matiere_enseignant_classe.getColumnModel().getColumn(2).setMaxWidth(120);
            table_matiere_enseignant_classe.getColumnModel().getColumn(3).setPreferredWidth(150);
            table_matiere_enseignant_classe.getColumnModel().getColumn(3).setMaxWidth(200);
            table_matiere_enseignant_classe.getColumnModel().getColumn(5).setPreferredWidth(150);
            table_matiere_enseignant_classe.getColumnModel().getColumn(5).setMaxWidth(200);
            table_matiere_enseignant_classe.getColumnModel().getColumn(6).setMinWidth(185);
            table_matiere_enseignant_classe.getColumnModel().getColumn(6).setPreferredWidth(185);
            table_matiere_enseignant_classe.getColumnModel().getColumn(6).setMaxWidth(185);
        }

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout panel_matiere_classe_professeurLayout = new javax.swing.GroupLayout(panel_matiere_classe_professeur);
        panel_matiere_classe_professeur.setLayout(panel_matiere_classe_professeurLayout);
        panel_matiere_classe_professeurLayout.setHorizontalGroup(
            panel_matiere_classe_professeurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_matiere_classe_professeurLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_matiere_classe_professeurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_matiere_classe_professeurLayout.createSequentialGroup()
                        .addGroup(panel_matiere_classe_professeurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_matiere_classe_professeurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(combo_box_matiere_enseignant_classe_cycle, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combo_box_matiere_enseignant_classe_classe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combo_box_matiere_enseignant_classe_annee, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_matiere_classe_professeurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_matiere_classe_professeurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combo_box_matiere_enseignant_classe_matiere, 0, 222, Short.MAX_VALUE)
                            .addComponent(combo_box_matiere_enseignant_classe_type, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(text_field_matiere_enseignant_classe_rechercher))
                        .addGap(186, 186, 186))
                    .addGroup(panel_matiere_classe_professeurLayout.createSequentialGroup()
                        .addComponent(scroll_pane_matiere_classe_professeur)
                        .addContainerGap())))
        );
        panel_matiere_classe_professeurLayout.setVerticalGroup(
            panel_matiere_classe_professeurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_matiere_classe_professeurLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_matiere_classe_professeurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_matiere_classe_professeurLayout.createSequentialGroup()
                        .addGroup(panel_matiere_classe_professeurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(combo_box_matiere_enseignant_classe_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_matiere_classe_professeurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(combo_box_matiere_enseignant_classe_matiere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_matiere_classe_professeurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text_field_matiere_enseignant_classe_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)))
                    .addGroup(panel_matiere_classe_professeurLayout.createSequentialGroup()
                        .addGroup(panel_matiere_classe_professeurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combo_box_matiere_enseignant_classe_annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_matiere_classe_professeurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(combo_box_matiere_enseignant_classe_cycle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_matiere_classe_professeurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(combo_box_matiere_enseignant_classe_classe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator2))
                .addGap(18, 18, 18)
                .addComponent(scroll_pane_matiere_classe_professeur, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbed_pane.addTab("Matière par enseignant par classe", panel_matiere_classe_professeur);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbed_pane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbed_pane)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void menu_item_type_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_type_addActionPerformed
        add_type();
    }//GEN-LAST:event_menu_item_type_addActionPerformed

    private void menu_item_type_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_type_updateActionPerformed
        update_type();
    }//GEN-LAST:event_menu_item_type_updateActionPerformed

    private void menu_item_type_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_type_removeActionPerformed
        remove_type();
    }//GEN-LAST:event_menu_item_type_removeActionPerformed

    private void menu_item_matiere_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_matiere_addActionPerformed
        add_matiere();
    }//GEN-LAST:event_menu_item_matiere_addActionPerformed

    private void menu_item_matiere_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_matiere_updateActionPerformed
        update_matiere();
    }//GEN-LAST:event_menu_item_matiere_updateActionPerformed

    private void menu_item_matiere_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_matiere_removeActionPerformed
        remove_matiere();
    }//GEN-LAST:event_menu_item_matiere_removeActionPerformed

    private void combo_box_matiere_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_matiere_typeActionPerformed
        table_matiere_matiere();
    }//GEN-LAST:event_combo_box_matiere_typeActionPerformed

    private void combo_box_matiere_classe_anneeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_matiere_classe_anneeActionPerformed
        init_combo_box_cycle();
        init_combo_box_classe();
        table_matiere_classe();
    }//GEN-LAST:event_combo_box_matiere_classe_anneeActionPerformed

    private void combo_box_matiere_classe_cycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_matiere_classe_cycleActionPerformed
        init_combo_box_classe();
        table_matiere_classe();
    }//GEN-LAST:event_combo_box_matiere_classe_cycleActionPerformed

    private void combo_box_matiere_classe_matiereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_matiere_classe_matiereActionPerformed
        table_matiere_classe();
    }//GEN-LAST:event_combo_box_matiere_classe_matiereActionPerformed

    private void combo_box_matiere_classe_classeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_matiere_classe_classeActionPerformed
        table_matiere_classe();
    }//GEN-LAST:event_combo_box_matiere_classe_classeActionPerformed

    private void combo_box_matiere_classe_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_matiere_classe_typeActionPerformed
        init_combo_box_matiere();
        table_matiere_classe();
    }//GEN-LAST:event_combo_box_matiere_classe_typeActionPerformed

    private void menu_item_matiere_classe_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_matiere_classe_addActionPerformed
        add_matiere_classe();
    }//GEN-LAST:event_menu_item_matiere_classe_addActionPerformed

    private void menu_item_matiere_classe_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_matiere_classe_updateActionPerformed
        update_matiere_classe();
    }//GEN-LAST:event_menu_item_matiere_classe_updateActionPerformed

    private void menu_item_matiere_classe_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_matiere_classe_removeActionPerformed
        remove_matiere_classe();
    }//GEN-LAST:event_menu_item_matiere_classe_removeActionPerformed

    private void combo_box_matiere_enseignant_classe_anneeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_matiere_enseignant_classe_anneeActionPerformed
        init_combo_box_mec_classe();
        table_matiere_classe_professeur();
    }//GEN-LAST:event_combo_box_matiere_enseignant_classe_anneeActionPerformed

    private void combo_box_matiere_enseignant_classe_cycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_matiere_enseignant_classe_cycleActionPerformed
        init_combo_box_mec_classe();
        table_matiere_classe_professeur();
    }//GEN-LAST:event_combo_box_matiere_enseignant_classe_cycleActionPerformed

    private void combo_box_matiere_enseignant_classe_classeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_matiere_enseignant_classe_classeActionPerformed
        table_matiere_classe_professeur();
    }//GEN-LAST:event_combo_box_matiere_enseignant_classe_classeActionPerformed

    private void combo_box_matiere_enseignant_classe_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_matiere_enseignant_classe_typeActionPerformed
        init_combo_box_mec_matiere();
        table_matiere_classe_professeur();
    }//GEN-LAST:event_combo_box_matiere_enseignant_classe_typeActionPerformed

    private void combo_box_matiere_enseignant_classe_matiereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_matiere_enseignant_classe_matiereActionPerformed
        table_matiere_classe_professeur();
    }//GEN-LAST:event_combo_box_matiere_enseignant_classe_matiereActionPerformed

    private void menu_item_matiere_classe_professeur_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_matiere_classe_professeur_addActionPerformed
        add_matiere_classe_professeur();
    }//GEN-LAST:event_menu_item_matiere_classe_professeur_addActionPerformed

    private void menu_item_matiere_classe_professeur_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_matiere_classe_professeur_updateActionPerformed
        update_matiere_classe_professeur();
    }//GEN-LAST:event_menu_item_matiere_classe_professeur_updateActionPerformed

    private void menu_item_matiere_classe_professeur_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_matiere_classe_professeur_removeActionPerformed
        remove_matiere_classe_professeur();
    }//GEN-LAST:event_menu_item_matiere_classe_professeur_removeActionPerformed

    private void tabbed_paneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabbed_paneStateChanged
        state = tabbed_pane.getSelectedIndex();
        table_matiere_type();
        table_matiere_matiere();
        table_matiere_classe();
        table_matiere_classe_professeur();
    }//GEN-LAST:event_tabbed_paneStateChanged
    private int state = 0;
    private final HashMap<Integer, Long> id_cb_matiere_types, id_table_matiere_types, id_table_matiere_matieres, id_cb_matiere_classe_annees, id_cb_matiere_classe_cycles, id_cb_matiere_classe_classes, id_cb_matiere_classe_types, id_cb_matiere_classe_matieres, id_table_matiere_classes, id_cb_matiere_enseignant_classe_annees, id_cb_matiere_enseignant_classe_cycles, id_cb_matiere_enseignant_classe_classes, id_cb_matiere_enseignant_classe_types, id_cb_matiere_enseignant_classe_matieres, id_table_matiere_enseignant_classes;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combo_box_matiere_classe_annee;
    private javax.swing.JComboBox<String> combo_box_matiere_classe_classe;
    private javax.swing.JComboBox<String> combo_box_matiere_classe_cycle;
    private javax.swing.JComboBox<String> combo_box_matiere_classe_matiere;
    private javax.swing.JComboBox<String> combo_box_matiere_classe_type;
    private javax.swing.JComboBox<String> combo_box_matiere_enseignant_classe_annee;
    private javax.swing.JComboBox<String> combo_box_matiere_enseignant_classe_classe;
    private javax.swing.JComboBox<String> combo_box_matiere_enseignant_classe_cycle;
    private javax.swing.JComboBox<String> combo_box_matiere_enseignant_classe_matiere;
    private javax.swing.JComboBox<String> combo_box_matiere_enseignant_classe_type;
    private javax.swing.JComboBox<String> combo_box_matiere_type;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JMenuItem menu_item_matiere_add;
    private javax.swing.JMenuItem menu_item_matiere_classe_add;
    private javax.swing.JMenuItem menu_item_matiere_classe_professeur_add;
    private javax.swing.JMenuItem menu_item_matiere_classe_professeur_remove;
    private javax.swing.JMenuItem menu_item_matiere_classe_professeur_update;
    private javax.swing.JMenuItem menu_item_matiere_classe_remove;
    private javax.swing.JMenuItem menu_item_matiere_classe_update;
    private javax.swing.JMenuItem menu_item_matiere_remove;
    private javax.swing.JMenuItem menu_item_matiere_update;
    private javax.swing.JMenuItem menu_item_type_add;
    private javax.swing.JMenuItem menu_item_type_remove;
    private javax.swing.JMenuItem menu_item_type_update;
    private javax.swing.JPanel panel_matiere;
    private javax.swing.JPanel panel_matiere_classe;
    private javax.swing.JPanel panel_matiere_classe_professeur;
    private javax.swing.JPopupMenu popup_matiere;
    private javax.swing.JPopupMenu popup_matiere_classe;
    private javax.swing.JPopupMenu popup_matiere_classe_professeur;
    private javax.swing.JPopupMenu popup_type;
    private javax.swing.JScrollPane scroll_pane_matiere;
    private javax.swing.JScrollPane scroll_pane_matiere_classe;
    private javax.swing.JScrollPane scroll_pane_matiere_classe_professeur;
    private javax.swing.JScrollPane scroll_pane_type;
    private javax.swing.JTabbedPane tabbed_pane;
    private javax.swing.JTable table_matiere_classe;
    private javax.swing.JTable table_matiere_enseignant_classe;
    private javax.swing.JTable table_matiere_matiere;
    private javax.swing.JTable table_matiere_type;
    private javax.swing.JTextField text_field_matiere_classe_rechercher;
    private javax.swing.JTextField text_field_matiere_enseignant_classe_rechercher;
    // End of variables declaration//GEN-END:variables
    private void init_combo_box_type() {
        combo_box_matiere_type.removeAllItems();
        combo_box_matiere_classe_type.removeAllItems();
        combo_box_matiere_enseignant_classe_type.removeAllItems();
        id_cb_matiere_types.clear();
        id_cb_matiere_classe_types.clear();
        id_cb_matiere_enseignant_classe_types.clear();
        ArrayList<MatiereType> list = getController().getMatiereTypeController().gets();
        if (list.size() > 1) {
            combo_box_matiere_type.addItem("Tous");
            combo_box_matiere_classe_type.addItem("Tous");
            combo_box_matiere_enseignant_classe_type.addItem("Tous");
            id_cb_matiere_types.put(0, null);
            id_cb_matiere_classe_types.put(0, null);
            id_cb_matiere_enseignant_classe_types.put(0, null);
        }
        for (int i = 0; i < list.size(); i++) {
            MatiereType matiereType = list.get(i);
            combo_box_matiere_type.addItem(matiereType.getType());
            combo_box_matiere_classe_type.addItem(matiereType.getType());
            combo_box_matiere_enseignant_classe_type.addItem(matiereType.getType());
            id_cb_matiere_types.put(i + 1, matiereType.getId());
            id_cb_matiere_classe_types.put(i + 1, matiereType.getId());
            id_cb_matiere_enseignant_classe_types.put(i + 1, matiereType.getId());
        }

    }

    private static void addPopup(Component component, final JPopupMenu popup) {
        component.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                if (e.isPopupTrigger()) {
                    showMenu(e);
                }
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                if (e.isPopupTrigger()) {
                    showMenu(e);
                }
            }

            private void showMenu(MouseEvent e) {
                popup.show(e.getComponent(), e.getX(), e.getY());
            }
        });
    }

    private void popup() {
        addPopup(scroll_pane_type, popup_type);
        addPopup(table_matiere_type, popup_type);
        addPopup(scroll_pane_matiere, popup_matiere);
        addPopup(table_matiere_matiere, popup_matiere);
        addPopup(scroll_pane_matiere_classe, popup_matiere_classe);
        addPopup(table_matiere_classe, popup_matiere_classe);
        addPopup(scroll_pane_matiere_classe_professeur, popup_matiere_classe_professeur);
        addPopup(table_matiere_enseignant_classe, popup_matiere_classe_professeur);
    }

    private void table_matiere_type() {
        DefaultTableModel model = (DefaultTableModel) table_matiere_type.getModel();
        model.setRowCount(0);
        id_table_matiere_types.clear();
        if (state != 0) {
            return;
        }
        ArrayList<bean.MatiereType> list = getController().getMatiereTypeController().gets();
        for (int i = 0; i < list.size(); i++) {
            Object row[] = new Object[4];
            row[0] = i + 1;
            row[1] = list.get(i).getType();
            row[2] = getController().getMatiereController().gets(list.get(i).getId()).size();
            id_table_matiere_types.put(i, list.get(i).getId());
            model.addRow(row);
        }
        table_matiere_type.setModel(model);
        table_matiere_type.setShowVerticalLines(true);
        table_matiere_type.setShowHorizontalLines(true);
        table_matiere_type.setRowHeight(30);
        table_matiere_type.setGridColor(Color.BLACK);
        TableColumn column = table_matiere_type.getColumnModel().getColumn(table_matiere_type.getColumnModel().getColumnCount() - 1);
        column.setCellRenderer(new ButtonsRenderer());
        column.setCellEditor(new ButtonsEditor(table_matiere_type));

    }

    private void table_matiere_matiere() {
        DefaultTableModel model = (DefaultTableModel) table_matiere_matiere.getModel();
        model.setRowCount(0);
        id_table_matiere_matieres.clear();
        if (state != 0) {
            return;
        }
        if (combo_box_matiere_type.getSelectedIndex() < 0) {
            return;
        }
        Long id_matiere_type = null;
        if (id_cb_matiere_types.get(combo_box_matiere_type.getSelectedIndex()) != null) {
            id_matiere_type = id_cb_matiere_types.get(combo_box_matiere_type.getSelectedIndex());
        }
        ArrayList<bean.Matiere> list = getController().getMatiereController().gets(id_matiere_type);
        for (int i = 0; i < list.size(); i++) {
            Object row[] = new Object[4];
            row[0] = i + 1;
            row[1] = list.get(i).getMatiere();
            row[2] = getController().getMatiereTypeController().get(list.get(i).getId_matiere_type()).getType();
            id_table_matiere_matieres.put(i, list.get(i).getId());
            model.addRow(row);
        }
        table_matiere_matiere.setModel(model);
        table_matiere_matiere.setShowVerticalLines(true);
        table_matiere_matiere.setShowHorizontalLines(true);
        table_matiere_matiere.setRowHeight(30);
        table_matiere_matiere.setGridColor(Color.BLACK);
        TableColumn column = table_matiere_matiere.getColumnModel().getColumn(table_matiere_matiere.getColumnModel().getColumnCount() - 1);
        column.setCellRenderer(new ButtonsRenderer());
        column.setCellEditor(new ButtonsEditor(table_matiere_matiere));
    }

    private void table_matiere_classe() {
        DefaultTableModel model = (DefaultTableModel) table_matiere_classe.getModel();
        model.setRowCount(0);
        id_table_matiere_classes.clear();
        if (state != 1) {
            return;
        }
        if (combo_box_matiere_classe_type.getSelectedIndex() < 0 || combo_box_matiere_classe_annee.getSelectedIndex() < 0 || combo_box_matiere_classe_cycle.getSelectedIndex() < 0 || combo_box_matiere_classe_classe.getSelectedIndex() < 0 || combo_box_matiere_classe_matiere.getSelectedIndex() < 0) {
            return;
        }
        Long id_cycle = id_cb_matiere_classe_cycles.get(combo_box_matiere_classe_cycle.getSelectedIndex()),
                id_classe = id_cb_matiere_classe_classes.get(combo_box_matiere_classe_classe.getSelectedIndex()),
                id_matiere_type = id_cb_matiere_classe_types.get(combo_box_matiere_classe_type.getSelectedIndex()),
                id_matiere = id_cb_matiere_classe_matieres.get(combo_box_matiere_classe_matiere.getSelectedIndex());
        ArrayList<bean.MatiereClasse> list = getController().getMatiereClasseController().gets(id_matiere, id_matiere_type, id_classe, id_cycle);
        for (int i = 0; i < list.size(); i++) {
            Object row[] = new Object[7];
            row[0] = i + 1;
            row[1] = getController().getClasseController().get(list.get(i).getId_classe()).getClasse();
            Matiere m = getController().getMatiereController().get(list.get(i).getId_matiere());
            row[2] = m.getMatiere();
            row[3] = getController().getMatiereTypeController().get(m.getId_matiere_type()).getType();//type
            row[4] = list.get(i).getCoefficient();
            row[5] = list.get(i).getVolume_horaire();
            id_table_matiere_classes.put(i, list.get(i).getId());
            model.addRow(row);
        }
        table_matiere_classe.setModel(model);
        table_matiere_classe.setShowVerticalLines(true);
        table_matiere_classe.setShowHorizontalLines(true);
        table_matiere_classe.setRowHeight(30);
        table_matiere_classe.setGridColor(Color.BLACK);
        TableColumn column = table_matiere_classe.getColumnModel().getColumn(table_matiere_classe.getColumnModel().getColumnCount() - 1);
        column.setCellRenderer(new ButtonsRenderer());
        column.setCellEditor(new ButtonsEditor(table_matiere_classe));
    }

    private void table_matiere_classe_professeur() {
        DefaultTableModel model = (DefaultTableModel) table_matiere_enseignant_classe.getModel();
        model.setRowCount(0);
        id_table_matiere_enseignant_classes.clear();
        if (state != 2) {
            return;
        }
        if (combo_box_matiere_enseignant_classe_type.getSelectedIndex() < 0 || combo_box_matiere_enseignant_classe_annee.getSelectedIndex() < 0 || combo_box_matiere_enseignant_classe_cycle.getSelectedIndex() < 0 || combo_box_matiere_enseignant_classe_classe.getSelectedIndex() < 0 || combo_box_matiere_enseignant_classe_matiere.getSelectedIndex() < 0) {
            return;
        }
        Long id_cycle, id_classe, id_matiere_type = null, id_matiere = null;
        if (id_cb_matiere_enseignant_classe_cycles.get(combo_box_matiere_enseignant_classe_cycle.getSelectedIndex()) != null) {
            id_cycle = id_cb_matiere_enseignant_classe_cycles.get(combo_box_matiere_enseignant_classe_cycle.getSelectedIndex());
        } else {
            return;
        }
        if (id_cb_matiere_enseignant_classe_classes.get(combo_box_matiere_enseignant_classe_classe.getSelectedIndex()) != null) {
            id_classe = id_cb_matiere_enseignant_classe_classes.get(combo_box_matiere_enseignant_classe_classe.getSelectedIndex());
        } else {
            return;
        }
        if (id_cb_matiere_enseignant_classe_types.get(combo_box_matiere_enseignant_classe_type.getSelectedIndex()) != null) {
            id_matiere_type = id_cb_matiere_enseignant_classe_types.get(combo_box_matiere_enseignant_classe_type.getSelectedIndex());
        }
        if (id_cb_matiere_enseignant_classe_matieres.get(combo_box_matiere_enseignant_classe_matiere.getSelectedIndex()) != null) {
            id_matiere = id_cb_matiere_enseignant_classe_matieres.get(combo_box_matiere_enseignant_classe_matiere.getSelectedIndex());
        }
        ArrayList<bean.ProfesseurMatiereClasse> list = getController().getProfesseurMatiereClasseController().gets(id_matiere, id_matiere_type, id_classe, id_cycle, null);
        for (int i = 0; i < list.size(); i++) {
            Object row[] = new Object[7];
            MatiereClasse matiereClasse = getController().getMatiereClasseController().get(list.get(i).getId_matiere_classe());
            Professeur professeur = getController().getProfesseurController().get(list.get(i).getId_professeur());
            Matiere m = getController().getMatiereController().get(matiereClasse.getId_matiere());
            row[0] = i + 1;
            row[1] = getController().getClasseController().get(matiereClasse.getId_classe()).getClasse();
            row[2] = professeur.getMatricule();
            row[3] = professeur.getNom_prenom();
            row[4] = m.getMatiere();
            row[5] = professeur.getContact();
            id_table_matiere_enseignant_classes.put(i, list.get(i).getId());
            model.addRow(row);
        }
        table_matiere_enseignant_classe.setModel(model);
        table_matiere_enseignant_classe.setShowVerticalLines(true);
        table_matiere_enseignant_classe.setShowHorizontalLines(true);
        table_matiere_enseignant_classe.setRowHeight(30);
        table_matiere_enseignant_classe.setGridColor(Color.BLACK);
        TableColumn column = table_matiere_enseignant_classe.getColumnModel().getColumn(table_matiere_enseignant_classe.getColumnModel().getColumnCount() - 1);
        column.setCellRenderer(new ButtonsRenderer());
        column.setCellEditor(new ButtonsEditor(table_matiere_enseignant_classe));
    }

    private void add_type() {
        if (!getDroit().isSuprimer()) {
            JOptionPane.showMessageDialog(this, "Veuillez contacter le super Administrateur ", "Droit super Administrateur réquis !", JOptionPane.WARNING_MESSAGE);
            return;
        }
        MatiereTypeDialog matiereTypeDialog = new MatiereTypeDialog(null, true);
        matiereTypeDialog.setVisible(true);
        init_combo_box_type();
        table_matiere_type();
    }

    private void update_type() {
        if (!getDroit().isSuprimer()) {
            JOptionPane.showMessageDialog(this, "Veuillez contacter le super Administrateur ", "Droit super Administrateur réquis !", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int row = table_matiere_type.getSelectedRow();
        if (row < 0) {
            return;
        }
        MatiereType matiereType = getController().getMatiereTypeController().get(id_table_matiere_types.get(row));
        MatiereTypeDialog matiereTypeDialog = new MatiereTypeDialog(null, true, matiereType);
        matiereTypeDialog.setVisible(true);
        init_combo_box_type();
        table_matiere_type();
    }

    private void remove_type() {
        if (!getDroit().isSuprimer()) {
            JOptionPane.showMessageDialog(this, "Veuillez contacter le super Administrateur ", "Droit super Administrateur réquis !", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int row = table_matiere_type.getSelectedRow();
        if (row < 0) {
            return;
        }
        MatiereType matiereType = getController().getMatiereTypeController().get(id_table_matiere_types.get(row));
        int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer le type " + matiereType.getType() + " ?", "Action irréversible", JOptionPane.YES_NO_OPTION);
        if (choice == 0) {
            getController().getMatiereTypeController().remove(matiereType.getId());
            init_combo_box_type();
            table_matiere_type();
        }
    }

    private void add_matiere() {
        if (!getDroit().isSuprimer()) {
            JOptionPane.showMessageDialog(this, "Veuillez contacter le super Administrateur ", "Droit super Administrateur réquis !", JOptionPane.WARNING_MESSAGE);
            return;
        }
        MatiereDialog matiereDialog = new MatiereDialog(null, true);
        matiereDialog.setVisible(true);
        table_matiere_type();
        table_matiere_matiere();
    }

    private void update_matiere() {
        if (!getDroit().isSuprimer()) {
            JOptionPane.showMessageDialog(this, "Veuillez contacter le super Administrateur ", "Droit super Administrateur réquis !", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int row = table_matiere_matiere.getSelectedRow();
        if (row < 0) {
            return;
        }
        Matiere matiere = getController().getMatiereController().get(id_table_matiere_matieres.get(row));
        MatiereDialog matiereDialog = new MatiereDialog(null, true, matiere);
        matiereDialog.setVisible(true);
        table_matiere_type();
        table_matiere_matiere();
    }

    private void remove_matiere() {
        if (!getDroit().isSuprimer()) {
            JOptionPane.showMessageDialog(this, "Veuillez contacter le super Administrateur ", "Droit super Administrateur réquis !", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int row = table_matiere_matiere.getSelectedRow();
        if (row < 0) {
            return;
        }
        Matiere matiere = getController().getMatiereController().get(id_table_matiere_matieres.get(row));
        int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer la matière " + matiere.getMatiere() + " ?", "Action irréversible", JOptionPane.YES_NO_OPTION);
        if (choice == 0) {
            getController().getMatiereController().remove(matiere.getId());
            table_matiere_type();
            table_matiere_matiere();
        }
    }

    private void add_matiere_classe() {
        if (!getDroit().isSuprimer()) {
            JOptionPane.showMessageDialog(this, "Veuillez contacter le super Administrateur ", "Droit super Administrateur réquis !", JOptionPane.WARNING_MESSAGE);
            return;
        }
        MatiereClasseDialog matiereClasseDialog = new MatiereClasseDialog(null, true);
        matiereClasseDialog.setVisible(true);
        table_matiere_classe();
    }

    private void add_matiere_classe_professeur() {
        if (!getDroit().isSuprimer()) {
            JOptionPane.showMessageDialog(this, "Veuillez contacter le super Administrateur ", "Droit super Administrateur réquis !", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int row = table_matiere_enseignant_classe.getSelectedRow();
        if (row > -1) {
            ProfesseurMatiereClasse professeurMatiereClasse = getController().getProfesseurMatiereClasseController().get(id_table_matiere_enseignant_classes.get(row));
            Professeur professeur = getController().getProfesseurController().get(professeurMatiereClasse.getId_professeur());
            ProfesseurMatiereClasseDialog professeurMatiereClasseDialog = new ProfesseurMatiereClasseDialog(null, true, professeur);
            professeurMatiereClasseDialog.setVisible(true);
            table_matiere_classe_professeur();
            return;
        }
        ProfesseurMatiereClasseDialog professeurMatiereClasseDialog = new ProfesseurMatiereClasseDialog(null, true);
        professeurMatiereClasseDialog.setVisible(true);
        table_matiere_classe_professeur();
    }

    private void update_matiere_classe() {
        if (!getDroit().isSuprimer()) {
            JOptionPane.showMessageDialog(this, "Veuillez contacter le super Administrateur ", "Droit super Administrateur réquis !", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int row = table_matiere_classe.getSelectedRow();
        if (row < 0) {
            return;
        }
        MatiereClasse matiereClasse = getController().getMatiereClasseController().get(id_table_matiere_classes.get(row));
        MatiereClasseDialog matiereClasseDialog = new MatiereClasseDialog(null, true, matiereClasse);
        matiereClasseDialog.setVisible(true);
        table_matiere_classe();
    }

    private void update_matiere_classe_professeur() {
        if (!getDroit().isSuprimer()) {
            JOptionPane.showMessageDialog(this, "Veuillez contacter le super Administrateur ", "Droit super Administrateur réquis !", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int row = table_matiere_enseignant_classe.getSelectedRow();
        if (row < 0) {
            return;
        }
        ProfesseurMatiereClasse professeurMatiereClasse = getController().getProfesseurMatiereClasseController().get(id_table_matiere_enseignant_classes.get(row));
        ProfesseurMatiereClasseDialog professeurMatiereClasseDialog = new ProfesseurMatiereClasseDialog(null, true, professeurMatiereClasse);
        professeurMatiereClasseDialog.setVisible(true);
        table_matiere_classe_professeur();
    }

    private void remove_matiere_classe() {
        if (!getDroit().isSuprimer()) {
            JOptionPane.showMessageDialog(this, "Veuillez contacter le super Administrateur ", "Droit super Administrateur réquis !", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int row = table_matiere_classe.getSelectedRow();
        if (row < 0) {
            return;
        }
        MatiereClasse matiereClasse = getController().getMatiereClasseController().get(id_table_matiere_classes.get(row));
        Matiere matiere = getController().getMatiereController().get(matiereClasse.getId_matiere());
        Classe classe = getController().getClasseController().get(matiereClasse.getId_classe());
        int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer la matière " + matiere.getMatiere() + " de la classe " + classe.getClasse() + " ?", "Action irréversible", JOptionPane.YES_NO_OPTION);
        if (choice == 0) {
            getController().getMatiereClasseController().remove(matiereClasse.getId());
            table_matiere_classe();
        }
    }

    private void remove_matiere_classe_professeur() {
        if (!getDroit().isSuprimer()) {
            JOptionPane.showMessageDialog(this, "Veuillez contacter le super Administrateur ", "Droit super Administrateur réquis !", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int row = table_matiere_enseignant_classe.getSelectedRow();
        if (row < 0) {
            return;
        }
        ProfesseurMatiereClasse professeurMatiereClasse = getController().getProfesseurMatiereClasseController().get(id_table_matiere_enseignant_classes.get(row));
        MatiereClasse matiereClasse = getController().getMatiereClasseController().get(professeurMatiereClasse.getId_matiere_classe());
        Matiere matiere = getController().getMatiereController().get(matiereClasse.getId_matiere());
        Professeur professeur = getController().getProfesseurController().get(professeurMatiereClasse.getId_professeur());
        int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir retirer la matière " + matiere.getMatiere() + " au professeur " + professeur.getNom_prenom() + " ?", "Action irréversible", JOptionPane.YES_NO_OPTION);
        if (choice == 0) {
            getController().getProfesseurMatiereClasseController().remove(professeurMatiereClasse.getId());
            table_matiere_classe_professeur();
        }
    }

    private void init_combo_box_annee() {
        combo_box_matiere_classe_annee.removeAllItems();
        combo_box_matiere_enseignant_classe_annee.removeAllItems();
        id_cb_matiere_classe_annees.clear();
        id_cb_matiere_enseignant_classe_annees.clear();
        ArrayList<Annee> list = getController().getAnneeController().gets();
        for (int i = 0; i < list.size(); i++) {
            combo_box_matiere_classe_annee.addItem(list.get(i).getAnnee());
            combo_box_matiere_enseignant_classe_annee.addItem(list.get(i).getAnnee());
            id_cb_matiere_classe_annees.put(i, list.get(i).getId());
            id_cb_matiere_enseignant_classe_annees.put(i, list.get(i).getId());
        }
    }

    private void init_combo_box_cycle() {
        id_cb_matiere_classe_cycles.clear();
        id_cb_matiere_enseignant_classe_cycles.clear();
        combo_box_matiere_classe_cycle.removeAllItems();
        combo_box_matiere_enseignant_classe_cycle.removeAllItems();
        ArrayList<Cycle> list = getController().getCycleController().gets();
        for (int i = 0; i < list.size(); i++) {
            Cycle cycle = list.get(i);
            combo_box_matiere_classe_cycle.addItem(cycle.getCycle());
            combo_box_matiere_enseignant_classe_cycle.addItem(cycle.getCycle());
            id_cb_matiere_classe_cycles.put(i, cycle.getId());
            id_cb_matiere_enseignant_classe_cycles.put(i, cycle.getId());
        }
    }

    private void init_combo_box_classe() {
        combo_box_matiere_classe_classe.removeAllItems();
        id_cb_matiere_classe_classes.clear();
        if (combo_box_matiere_classe_cycle.getSelectedIndex() < 0 || combo_box_matiere_classe_annee.getSelectedIndex() < 0) {
            return;
        }
        Long id_annee = id_cb_matiere_classe_annees.get(combo_box_matiere_classe_annee.getSelectedIndex()),
                id_cycle = id_cb_matiere_classe_cycles.get(combo_box_matiere_classe_cycle.getSelectedIndex());
        ArrayList<Classe> list = getController().getClasseController().gets(id_annee, id_cycle);
        for (int i = 0; i < list.size(); i++) {
            Classe classe = list.get(i);
            combo_box_matiere_classe_classe.addItem(classe.getClasse());
            id_cb_matiere_classe_classes.put(i, classe.getId());
        }
    }

    private void init_combo_box_mec_classe() {
        combo_box_matiere_enseignant_classe_classe.removeAllItems();
        id_cb_matiere_enseignant_classe_classes.clear();
        if (combo_box_matiere_enseignant_classe_cycle.getSelectedIndex() < 0 || combo_box_matiere_enseignant_classe_annee.getSelectedIndex() < 0) {
            return;
        }
        Long id_annee = id_cb_matiere_enseignant_classe_annees.get(combo_box_matiere_enseignant_classe_annee.getSelectedIndex()),
                id_cycle = id_cb_matiere_enseignant_classe_cycles.get(combo_box_matiere_enseignant_classe_cycle.getSelectedIndex());
        ArrayList<Classe> list = getController().getClasseController().gets(id_annee, id_cycle);
        for (int i = 0; i < list.size(); i++) {
            Classe classe = list.get(i);
            combo_box_matiere_enseignant_classe_classe.addItem(classe.getClasse());
            id_cb_matiere_enseignant_classe_classes.put(i, classe.getId());
        }
    }

    private void init_combo_box_matiere() {
        combo_box_matiere_classe_matiere.removeAllItems();
        id_cb_matiere_classe_matieres.clear();
        if (combo_box_matiere_classe_type.getSelectedIndex() < 0) {
            return;
        }
        Long id_matiere_type = id_cb_matiere_classe_types.get(combo_box_matiere_classe_type.getSelectedIndex());
        ArrayList<Matiere> list = getController().getMatiereController().gets(id_matiere_type);
        if (list.size() > 1) {
            combo_box_matiere_classe_matiere.addItem("Toutes");
            id_cb_matiere_classe_matieres.put(0, null);
        }
        for (int i = 0; i < list.size(); i++) {
            Matiere matiere = list.get(i);
            combo_box_matiere_classe_matiere.addItem(matiere.getMatiere());
            id_cb_matiere_classe_matieres.put(i + 1, matiere.getId());
        }
    }

    private void init_combo_box_mec_matiere() {
        combo_box_matiere_enseignant_classe_matiere.removeAllItems();
        id_cb_matiere_enseignant_classe_matieres.clear();
        if (combo_box_matiere_enseignant_classe_type.getSelectedIndex() < 0) {
            return;
        }
        Long id_matiere_type = id_cb_matiere_enseignant_classe_types.get(combo_box_matiere_enseignant_classe_type.getSelectedIndex());
        ArrayList<Matiere> list = getController().getMatiereController().gets(id_matiere_type);
        if (list.size() > 1) {
            combo_box_matiere_enseignant_classe_matiere.addItem("Toutes");
            id_cb_matiere_enseignant_classe_matieres.put(0, null);
        }
        for (int i = 0; i < list.size(); i++) {
            Matiere matiere = list.get(i);
            combo_box_matiere_enseignant_classe_matiere.addItem(matiere.getMatiere());
            id_cb_matiere_enseignant_classe_matieres.put(i + 1, matiere.getId());
        }
    }

    enum Actions {
        MODIFIER, SUPRIMER;
    }

    class ButtonsPanel extends JPanel {

        public final List<JButton> buttons = new ArrayList<>();

        public ButtonsPanel() {
            super(new FlowLayout(FlowLayout.LEFT));
            setOpaque(true);
            for (Actions a : Actions.values()) {
                JButton b = new JButton(a.toString());
                b.setFocusable(false);
                b.setRolloverEnabled(false);
                if ("MODIFIER".equals(a.toString())) {
                    b.setBackground(Color.green);
                    b.setForeground(Color.white);
                }
                if ("SUPRIMER".equals(a.toString())) {
                    b.setBackground(Color.red);
                    b.setForeground(Color.white);
                }
                add(b);
                buttons.add(b);
            }
        }

        protected void updateButtons(Object value) {
            if (value instanceof EnumSet ea) {
                removeAll();
                if (ea.contains(Actions.MODIFIER)) {
                    add(buttons.get(0));
                }
                if (ea.contains(Actions.SUPRIMER)) {
                    add(buttons.get(1));
                }
            }
        }
    }

    class ButtonsRenderer implements TableCellRenderer {

        private final ButtonsPanel panel = new ButtonsPanel();

        @Override
        public Component getTableCellRendererComponent(
                JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            panel.setBackground(isSelected ? table.getSelectionBackground() : table.getBackground());
            panel.updateButtons(value);
            return panel;
        }
    }

    class ModifierAction extends AbstractAction {

        public ModifierAction() {
            super(Actions.MODIFIER.toString());
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            //update();
        }
    }

    class SuprimerAction extends AbstractAction {

        public SuprimerAction() {
            super(Actions.SUPRIMER.toString());
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            //remove_eleve_classe();
        }
    }

    class ButtonsEditor extends AbstractCellEditor implements TableCellEditor {

        private final ButtonsPanel panel = new ButtonsPanel();
        private final JTable table;
        private Object o;

        private class EditingStopHandler extends MouseAdapter implements ActionListener {

            @Override
            public void mousePressed(MouseEvent e) {
                Object o = e.getSource();
                if (o instanceof TableCellEditor) {
                    actionPerformed(null);
                } else if (o instanceof JButton) {
                    ButtonModel m = ((JButton) e.getComponent()).getModel();
                    if (m.isPressed() && table.isRowSelected(table.getEditingRow()) && e.isControlDown()) {
                        panel.setBackground(table.getBackground());
                    }
                }
            }

            @Override
            public void actionPerformed(ActionEvent e) {
                EventQueue.invokeLater(() -> {
                    fireEditingStopped();
                });
            }
        }

        public ButtonsEditor(JTable table) {
            super();
            this.table = table;
            panel.buttons.get(0).setAction(new ModifierAction());
            panel.buttons.get(1).setAction(new SuprimerAction());

            EditingStopHandler handler = new EditingStopHandler();
            for (JButton b : panel.buttons) {
                b.addMouseListener(handler);
                b.addActionListener(handler);
            }
            panel.addMouseListener(handler);
        }

        @Override
        public Component getTableCellEditorComponent(
                JTable table, Object value, boolean isSelected, int row, int column) {
            panel.setBackground(table.getSelectionBackground());
            panel.updateButtons(value);
            o = value;
            return panel;
        }

        @Override
        public Object getCellEditorValue() {
            return o;
        }
    }
}
