/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.frame;

import bean.Annee;
import bean.Classe;
import bean.Cycle;
import bean.Eleve;
import bean.Nationalite;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import static main.Main.getController;

/**
 *
 * @author ATH
 */
public class MessageForm extends javax.swing.JFrame {

    /**
     * Creates new form RetardForm
     */
    public MessageForm() {

        list_contact = new ArrayList<>();
        initComponents();
        init_combo_box_annee();
        init_combo_box_cycle();
        init_combo_box_classe();
        init_combo_box_nationalite();
        table_eleve();
        update_list_contact();
        popup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup_table = new javax.swing.JPopupMenu();
        menu_item_add_contact = new javax.swing.JMenuItem();
        menu_item_add_all = new javax.swing.JMenuItem();
        popup_menu_list_contact = new javax.swing.JPopupMenu();
        menu_item_remove_contact = new javax.swing.JMenuItem();
        menu_item_remove_all_contact = new javax.swing.JMenuItem();
        jPanel3 = new javax.swing.JPanel();
        scroll_pane_list_contact = new javax.swing.JScrollPane();
        jList_contact = new javax.swing.JList<>();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txt_message = new javax.swing.JTextArea();
        label_sms = new javax.swing.JLabel();
        button_ok = new javax.swing.JButton();
        scroll_pane_table_eleve = new javax.swing.JScrollPane();
        table_eleve = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        combo_box_annee = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        combo_box_cycle = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        combo_box_classe = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        text_field_rechercher = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        combo_box_nationalite = new javax.swing.JComboBox<>();
        combo_box_sexe = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        menu_item_add_contact.setText("Ajouter");
        menu_item_add_contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_add_contactActionPerformed(evt);
            }
        });
        popup_table.add(menu_item_add_contact);

        menu_item_add_all.setText("Ajouter tous");
        menu_item_add_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_add_allActionPerformed(evt);
            }
        });
        popup_table.add(menu_item_add_all);

        menu_item_remove_contact.setText("Retirer");
        menu_item_remove_contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_remove_contactActionPerformed(evt);
            }
        });
        popup_menu_list_contact.add(menu_item_remove_contact);

        menu_item_remove_all_contact.setText("Retirer tout");
        menu_item_remove_all_contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_remove_all_contactActionPerformed(evt);
            }
        });
        popup_menu_list_contact.add(menu_item_remove_all_contact);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 558));
        setResizable(false);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Expéditaire", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jList_contact.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        scroll_pane_list_contact.setViewportView(jList_contact);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scroll_pane_list_contact)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scroll_pane_list_contact)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Message", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        txt_message.setColumns(20);
        txt_message.setRows(5);
        jScrollPane3.setViewportView(txt_message);

        label_sms.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_sms.setText("bienvenue");

        button_ok.setText("Envoyer");
        button_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_okActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(label_sms, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(button_ok)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_sms, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_ok))
                .addContainerGap())
        );

        table_eleve.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "N°", "CLASSE", "MATRICULE", "NOM ET PRENOM", "TEL. PARENT/TUTEUR", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scroll_pane_table_eleve.setViewportView(table_eleve);
        if (table_eleve.getColumnModel().getColumnCount() > 0) {
            table_eleve.getColumnModel().getColumn(0).setMinWidth(50);
            table_eleve.getColumnModel().getColumn(0).setPreferredWidth(50);
            table_eleve.getColumnModel().getColumn(0).setMaxWidth(50);
            table_eleve.getColumnModel().getColumn(1).setMinWidth(80);
            table_eleve.getColumnModel().getColumn(1).setPreferredWidth(80);
            table_eleve.getColumnModel().getColumn(1).setMaxWidth(80);
            table_eleve.getColumnModel().getColumn(2).setMinWidth(80);
            table_eleve.getColumnModel().getColumn(2).setPreferredWidth(80);
            table_eleve.getColumnModel().getColumn(2).setMaxWidth(80);
            table_eleve.getColumnModel().getColumn(4).setMinWidth(200);
            table_eleve.getColumnModel().getColumn(4).setPreferredWidth(200);
            table_eleve.getColumnModel().getColumn(4).setMaxWidth(200);
            table_eleve.getColumnModel().getColumn(5).setMinWidth(5);
            table_eleve.getColumnModel().getColumn(5).setPreferredWidth(5);
            table_eleve.getColumnModel().getColumn(5).setMaxWidth(5);
        }

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Année :");

        combo_box_annee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_annee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_anneeActionPerformed(evt);
            }
        });

        jLabel6.setText("Cycle :");

        combo_box_cycle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_cycle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_cycleActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Classe :");

        combo_box_classe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_classe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_classeActionPerformed(evt);
            }
        });

        jLabel4.setText("Rechercher :");

        text_field_rechercher.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_field_rechercherKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Nationalité :");

        combo_box_nationalite.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_nationalite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_nationaliteActionPerformed(evt);
            }
        });

        combo_box_sexe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tous", "M", "F" }));
        combo_box_sexe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_sexeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Sexe :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scroll_pane_table_eleve)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(combo_box_annee, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(combo_box_cycle, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(combo_box_classe, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text_field_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_box_nationalite, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_box_sexe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 109, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(combo_box_annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(combo_box_sexe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(combo_box_cycle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(combo_box_nationalite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(combo_box_classe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(text_field_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(scroll_pane_table_eleve, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menu_item_add_contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_add_contactActionPerformed
        add_contact();
    }//GEN-LAST:event_menu_item_add_contactActionPerformed

    private void menu_item_add_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_add_allActionPerformed
        add_all_contact();

    }//GEN-LAST:event_menu_item_add_allActionPerformed

    private void menu_item_remove_contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_remove_contactActionPerformed
        remove_contact();
    }//GEN-LAST:event_menu_item_remove_contactActionPerformed

    private void combo_box_anneeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_anneeActionPerformed
        init_combo_box_classe();
        table_eleve();
    }//GEN-LAST:event_combo_box_anneeActionPerformed

    private void combo_box_cycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_cycleActionPerformed
        init_combo_box_classe();
        table_eleve();
    }//GEN-LAST:event_combo_box_cycleActionPerformed

    private void combo_box_classeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_classeActionPerformed
        table_eleve();
    }//GEN-LAST:event_combo_box_classeActionPerformed

    private void text_field_rechercherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_field_rechercherKeyReleased
        table_eleve();
    }//GEN-LAST:event_text_field_rechercherKeyReleased

    private void combo_box_nationaliteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_nationaliteActionPerformed
        table_eleve();
    }//GEN-LAST:event_combo_box_nationaliteActionPerformed

    private void combo_box_sexeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_sexeActionPerformed
        table_eleve();
    }//GEN-LAST:event_combo_box_sexeActionPerformed

    private void button_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_okActionPerformed
        sendingSMS();
    }//GEN-LAST:event_button_okActionPerformed

    private void menu_item_remove_all_contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_remove_all_contactActionPerformed
        remove_all_contact();
    }//GEN-LAST:event_menu_item_remove_all_contactActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MessageForm().setVisible(true);
        });
    }
    private ArrayList<String> list_contact;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_ok;
    private javax.swing.JComboBox<String> combo_box_annee;
    private javax.swing.JComboBox<String> combo_box_classe;
    private javax.swing.JComboBox<String> combo_box_cycle;
    private javax.swing.JComboBox<String> combo_box_nationalite;
    private javax.swing.JComboBox<String> combo_box_sexe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<String> jList_contact;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel label_sms;
    private javax.swing.JMenuItem menu_item_add_all;
    private javax.swing.JMenuItem menu_item_add_contact;
    private javax.swing.JMenuItem menu_item_remove_all_contact;
    private javax.swing.JMenuItem menu_item_remove_contact;
    private javax.swing.JPopupMenu popup_menu_list_contact;
    private javax.swing.JPopupMenu popup_table;
    private javax.swing.JScrollPane scroll_pane_list_contact;
    private javax.swing.JScrollPane scroll_pane_table_eleve;
    private javax.swing.JTable table_eleve;
    private javax.swing.JTextField text_field_rechercher;
    private javax.swing.JTextArea txt_message;
    // End of variables declaration//GEN-END:variables
    private static void addPopup(Component component, final JPopupMenu popup) {
        component.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                if (e.isPopupTrigger()) {
                    showMenu(e);
                }
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                if (e.isPopupTrigger()) {
                    showMenu(e);
                }
            }

            private void showMenu(MouseEvent e) {
                popup.show(e.getComponent(), e.getX(), e.getY());
            }
        });
    }

    private void popup() {
        addPopup(scroll_pane_table_eleve, popup_table);
        addPopup(table_eleve, popup_table);

        addPopup(scroll_pane_list_contact, popup_menu_list_contact);
        addPopup(jList_contact, popup_menu_list_contact);
    }

    private void table_eleve() {
        DefaultTableModel model = (DefaultTableModel) table_eleve.getModel();
        model.setRowCount(0);
        if (combo_box_annee.getSelectedIndex() < 0 || combo_box_cycle.getSelectedIndex() < 0 || combo_box_classe.getSelectedIndex() < 0 || combo_box_sexe.getSelectedIndex() < 0) {
            return;
        }
        long id_annee = 0, id_classe = 0, id_cycle = 0, id_nationalite = 0;
        String rechercher = null, sexe = combo_box_sexe.getSelectedItem().toString();
        Annee annee = getController().getAnneeController().get(combo_box_annee.getSelectedItem().toString());
        if (annee != null) {
            id_annee = annee.getId();
        }
        Cycle cycle = getController().getCycleController().get(combo_box_cycle.getSelectedItem().toString());
        if (cycle != null) {
            id_cycle = cycle.getId();
        }
        Classe classe = getController().getClasseController().get(id_annee, id_cycle, combo_box_classe.getSelectedItem().toString());
        if (classe != null) {
            id_classe = classe.getId();
        }
        if (!text_field_rechercher.getText().isEmpty()) {
            rechercher = text_field_rechercher.getText();
        }
        ArrayList<bean.EleveClasse> list = getController().getEleveClasseController().gets(null, id_annee, id_cycle, id_classe, null, null, null);
        for (int i = 0; i < list.size(); i++) {
            Object row[] = new Object[6];
            Eleve eleve = getController().getEleveController().get(list.get(i).getId_eleve());
            row[0] = i + 1;
            row[1] = getController().getClasseController().get(list.get(i).getId_classe()).getClasse();
            row[2] = eleve.getMatricule();
            row[3] = eleve.getNom_prenom();
            row[4] = eleve.getContact();
            row[5] = eleve.getId();
            model.addRow(row);
        }
        table_eleve.setModel(model);
        table_eleve.setShowVerticalLines(true);
        table_eleve.setShowHorizontalLines(true);
    }

    private void init_combo_box_annee() {
        combo_box_annee.removeAllItems();
        getController().getAnneeController().gets().forEach((i) -> {
            combo_box_annee.addItem(i.getAnnee());
        });
    }

    private void init_combo_box_cycle() {
        combo_box_cycle.removeAllItems();
        ArrayList<Cycle> list = getController().getCycleController().gets();
        if (list.size() > 1) {
            combo_box_cycle.addItem("Tous");
        }
        list.forEach((i) -> {
            combo_box_cycle.addItem(i.getCycle());
        });
    }

    private void init_combo_box_nationalite() {
        combo_box_nationalite.removeAllItems();
        ArrayList<Nationalite> list = getController().getNationaliteController().gets();
        if (list.size() > 1) {
            combo_box_nationalite.addItem("Toutes");
        }
        list.forEach((i) -> {
            combo_box_nationalite.addItem(i.getNationalite());
        });
    }

    private void init_combo_box_classe() {
        combo_box_classe.removeAllItems();
        if (combo_box_annee.getSelectedIndex() < 0 || combo_box_cycle.getSelectedIndex() < 0) {
            return;
        }
        long id_annee = 0, id_cycle = 0;
        Annee annee = getController().getAnneeController().get(combo_box_annee.getSelectedItem().toString());
        Cycle cycle = getController().getCycleController().get(combo_box_cycle.getSelectedItem().toString());
        if (annee != null) {
            id_annee = annee.getId();
        }
        if (cycle != null) {
            id_cycle = cycle.getId();
        }
        ArrayList<Classe> list = getController().getClasseController().gets(id_annee, id_cycle);
        if (list.size() > 1) {
            combo_box_classe.addItem("Toutes");
        }
        list.forEach((i) -> {
            combo_box_classe.addItem(i.getClasse());
        });
    }

    private void update_list_contact() {
        Set<String> set = new HashSet<>(list_contact);
        list_contact.clear();
        list_contact.addAll(set);
        label_sms.setText("Total SMS : " + list_contact.size());
        jList_contact.setModel(new javax.swing.AbstractListModel<String>() {
            ArrayList<String> strings = list_contact;

            @Override
            public int getSize() {
                return strings.size();
            }

            @Override
            public String getElementAt(int i) {
                return strings.get(i);
            }

            public void addItem(String s) {
                strings.add(s);
            }
        ;
    }

    );
    }

    private void add_contact() {
        int[] rows = table_eleve.getSelectedRows();
        if (rows.length == 0) {
            return;
        }
        int column = table_eleve.getColumnCount() - 1;
        for (int i = 0; i < rows.length; i++) {
            long id = Long.parseLong(table_eleve.getValueAt(rows[i], column).toString());
            Eleve eleve = getController().getEleveController().get(id);
            list_contact.add(eleve.getContact());
        }
        update_list_contact();
    }

    private void add_all_contact() {
        int row = table_eleve.getRowCount();
        if (row == 0) {
            return;
        }
        int column = table_eleve.getColumnCount() - 1;
        for (int i = 0; i < row; i++) {
            long id = Long.parseLong(table_eleve.getValueAt(i, column).toString());
            Eleve eleve = getController().getEleveController().get(id);
            list_contact.add(eleve.getContact());
        }
        update_list_contact();

    }

    private void remove_contact() {
        int row = jList_contact.getSelectedIndex();
        if (row < 0) {
            return;
        }
        list_contact.remove(jList_contact.getSelectedValue());
        update_list_contact();
    }

    private void remove_all_contact() {
        list_contact = new ArrayList<>();
        update_list_contact();
    }

    private void sendingSMS() {
        if (list_contact.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Aucun expéditaire ! ", "Erreur !", JOptionPane.WARNING_MESSAGE);
        } else {
            getController().getConfigurationController().sendSMS(list_contact, txt_message.getText());
            JOptionPane.showMessageDialog(this, "Stock SMS restant = " + getController().getConfigurationController().getSMSRestant(), "Stock SMS", JOptionPane.INFORMATION_MESSAGE);
        }
    }
}
