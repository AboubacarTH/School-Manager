/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.dialog;

import bean.Annee;
import bean.Classe;
import bean.Cycle;
import bean.Eleve;
import bean.EleveClasse;
import bean.Nationalite;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.sql.Date;
import java.util.ArrayList;
import java.util.HashMap;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import static main.Main.getController;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.FilenameUtils;

/**
 *
 * @author ATH
 */
public class EleveDialog extends javax.swing.JDialog {

    /**
     * Creates new form EleveDialogR
     *
     * @param parent
     * @param modal
     */
    public EleveDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.eleveClasse = null;
        id_annees = new HashMap<>();
        id_cycles = new HashMap<>();
        id_classes = new HashMap<>();
        id_nationalites = new HashMap<>();
        matricule = "";
        initComponents();
        init_combo_box_annee();
        init_combo_box_cycle();
        init_combo_box_classe();
        init_combo_box_nationalite();
        control_matricule();
        control_numero_table();
    }

    public EleveDialog(java.awt.Frame parent, boolean modal, EleveClasse eleveClasse) {
        super(parent, modal);
        this.eleveClasse = eleveClasse;
        id_annees = new HashMap<>();
        id_cycles = new HashMap<>();
        id_classes = new HashMap<>();
        id_nationalites = new HashMap<>();
        initComponents();
        init_combo_box_annee();
        init_combo_box_cycle();
        init_combo_box_classe();
        init_combo_box_nationalite();
        try {
            Eleve eleve = getController().getEleveController().get(this.eleveClasse.getId_eleve());
            Classe classe = getController().getClasseController().get(this.eleveClasse.getId_classe());
            Annee annee = getController().getAnneeController().get(classe.getId_annee());
            Cycle cycle = getController().getCycleController().get(classe.getId_cycle());
            combo_box_annee.setSelectedItem(annee.getAnnee());
            combo_box_cycle.setSelectedItem(cycle.getCycle());
            combo_box_classe.setSelectedItem(classe.getClasse());
            matricule = eleve.getMatricule();
            label_photo.setIcon(new ImageIcon(eleve.getPhoto()));
            text_field_matricule.setText(matricule);
            text_field_nom_prenom.setText(eleve.getNom_prenom());
            date_chooser_date_de_naissance.setDate(eleve.getDate_de_naissance());
            combo_box_sexe.setSelectedItem(eleve.getSexe());
            text_field_lieu_de_naissance.setText(eleve.getLieu_de_naissance());
            Nationalite nationalite = getController().getNationaliteController().get(eleve.getId_nationalite());
            combo_box_nationalite.setSelectedItem(nationalite.getNationalite());
            text_field_contact.setText(eleve.getContact());
            spinner_numero_table.setValue(eleve.getNumero_table());
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_photo = new javax.swing.JLabel();
        text_field_matricule = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        text_field_nom_prenom = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        date_chooser_date_de_naissance = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        combo_box_sexe = new javax.swing.JComboBox<>();
        text_field_lieu_de_naissance = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        combo_box_nationalite = new javax.swing.JComboBox<>();
        text_field_contact = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        button_cancel = new javax.swing.JButton();
        button_ok = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        combo_box_annee = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        combo_box_cycle = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        combo_box_classe = new javax.swing.JComboBox<>();
        spinner_numero_table = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Paramètre Eleve");
        setModal(true);
        setResizable(false);

        label_photo.setBackground(new java.awt.Color(153, 153, 153));
        label_photo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_photo.setText("Photo d'identité");
        label_photo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        label_photo.setMaximumSize(new java.awt.Dimension(100, 100));
        label_photo.setMinimumSize(new java.awt.Dimension(100, 100));
        label_photo.setPreferredSize(new java.awt.Dimension(100, 100));
        label_photo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_photoMouseClicked(evt);
            }
        });

        text_field_matricule.setEditable(false);

        jLabel5.setText("Matricule :");

        jLabel6.setText("Nom et prénom :");

        jLabel7.setText("Date de naissance :");

        jLabel8.setText("Sexe :");

        combo_box_sexe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "F" }));

        jLabel9.setText("Lieu de naissance :");

        jLabel10.setText("Nationalité :");

        combo_box_nationalite.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel11.setText("N° parent/tuteur :");

        button_cancel.setText("Cancel");
        button_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_cancelActionPerformed(evt);
            }
        });

        button_ok.setText("OK");
        button_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_okActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Année :");

        combo_box_annee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_annee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_anneeActionPerformed(evt);
            }
        });

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Cycle :");

        combo_box_cycle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_cycle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_cycleActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Classe :");

        combo_box_classe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_classe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_box_classeActionPerformed(evt);
            }
        });

        spinner_numero_table.setModel(new javax.swing.SpinnerNumberModel(0, 0, 99, 1));

        jLabel1.setText("N°");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text_field_nom_prenom)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(combo_box_nationalite, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(date_chooser_date_de_naissance, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addComponent(text_field_lieu_de_naissance, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(combo_box_sexe, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinner_numero_table, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                            .addComponent(text_field_contact)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(button_ok)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(button_cancel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(112, 112, 112)
                                .addComponent(text_field_matricule))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(combo_box_cycle, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(combo_box_classe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(combo_box_annee, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(label_photo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(combo_box_sexe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(combo_box_annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(combo_box_cycle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(combo_box_classe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(text_field_matricule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)))
                            .addComponent(label_photo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text_field_nom_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(date_chooser_date_de_naissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_field_lieu_de_naissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(spinner_numero_table, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_box_nationalite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_field_contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_cancel)
                    .addComponent(button_ok))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void button_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_cancelActionPerformed
        action_cancel_button();
    }//GEN-LAST:event_button_cancelActionPerformed

    private void label_photoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_photoMouseClicked
        saving_image();
    }//GEN-LAST:event_label_photoMouseClicked

    private void button_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_okActionPerformed
        action_ok_button();
    }//GEN-LAST:event_button_okActionPerformed

    private void combo_box_anneeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_anneeActionPerformed
        init_combo_box_classe();
    }//GEN-LAST:event_combo_box_anneeActionPerformed

    private void combo_box_cycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_cycleActionPerformed
        init_combo_box_classe();
    }//GEN-LAST:event_combo_box_cycleActionPerformed

    private void combo_box_classeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_box_classeActionPerformed
        control_numero_table();
    }//GEN-LAST:event_combo_box_classeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            EleveDialog dialog = new EleveDialog(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    private final EleveClasse eleveClasse;
    //private static String PHOTO_DIR = getPATH() + "ressources/photo/";
    private String photo, matricule;
    private final HashMap<Integer, Long> id_annees, id_cycles, id_classes, id_nationalites;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_cancel;
    private javax.swing.JButton button_ok;
    private javax.swing.JComboBox<String> combo_box_annee;
    private javax.swing.JComboBox<String> combo_box_classe;
    private javax.swing.JComboBox<String> combo_box_cycle;
    private javax.swing.JComboBox<String> combo_box_nationalite;
    private javax.swing.JComboBox<String> combo_box_sexe;
    private com.toedter.calendar.JDateChooser date_chooser_date_de_naissance;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel label_photo;
    private javax.swing.JSpinner spinner_numero_table;
    private javax.swing.JTextField text_field_contact;
    private javax.swing.JTextField text_field_lieu_de_naissance;
    private javax.swing.JTextField text_field_matricule;
    private javax.swing.JTextField text_field_nom_prenom;
    // End of variables declaration//GEN-END:variables
    private void action_ok_button() {
        if (text_field_nom_prenom.getText().isBlank() || combo_box_nationalite.getSelectedIndex() < 0 || text_field_matricule.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Champ vide.", "Erreur de syntaxe !", JOptionPane.WARNING_MESSAGE);
            return;
        }
        java.sql.Date date;
        try {
            date = new Date(date_chooser_date_de_naissance.getDate().getTime());
        } catch (Exception e) {
            date = null;
        }
        Long id_nationalite = id_nationalites.get(combo_box_nationalite.getSelectedIndex());
        Long id_classe = id_classes.get(combo_box_classe.getSelectedIndex());
        if (eleveClasse == null) {
            if (getController().getEleveController().get(text_field_matricule.getText()) != null) {
                JOptionPane.showMessageDialog(this, "Veuillez mettre de nouvelles données ", "Champ existant ou erroné !", JOptionPane.ERROR_MESSAGE);
                return;
            }
            getController().getEleveController().add(
                    id_nationalite,
                    matricule,
                    text_field_nom_prenom.getText(),
                    date,
                    text_field_lieu_de_naissance.getText(),
                    text_field_contact.getText(),
                    combo_box_sexe.getSelectedItem().toString(),
                    text_field_matricule.getText(), // a modifier
                    photo,
                    (int) spinner_numero_table.getValue()
            );
            Eleve eleve = getController().getEleveController().get(matricule);
            if (eleve != null && id_classes.get(combo_box_classe.getSelectedIndex()) != null) {
                getController().getEleveClasseController().add(
                        eleve.getId(),
                        id_classe
                );
            }
        } else {
            getController().getEleveController().update(
                    eleveClasse.getId_eleve(),
                    id_nationalite,
                    text_field_matricule.getText(),
                    text_field_nom_prenom.getText(),
                    date,
                    text_field_lieu_de_naissance.getText(),
                    text_field_contact.getText(),
                    combo_box_sexe.getSelectedItem().toString(),
                    text_field_matricule.getText(), // a modifier
                    photo,
                    (int) spinner_numero_table.getValue()
            );
            getController().getEleveClasseController().update(
                    eleveClasse.getId(),
                    eleveClasse.getId_eleve(),
                    id_classe
            );
        }
        JOptionPane.showMessageDialog(this, "Opération effectuée avec success ", "Réussie !", JOptionPane.INFORMATION_MESSAGE);
        control_matricule();
        text_field_nom_prenom.setText("");
        control_numero_table();
        //dispose();
    }

    private void saving_image() {
        JFileChooser fileChooser = new JFileChooser();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        fileChooser.setDialogTitle("Choisir la photo");
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Image files", new String[]{"png", "jpg", "jpeg"}));
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                Image image = ImageIO.read(fileChooser.getSelectedFile());
                File source = new File(fileChooser.getSelectedFile().getAbsolutePath());
                if (image != null) {
                    String extension = FilenameUtils.getExtension(fileChooser.getSelectedFile().getName());
                    File des = new File(this.getClass().getResource("ressources/photo/") + text_field_matricule.getText().replaceAll("/", "-") + "." + extension);
                    FileUtils.copyFile(source, des);
                    photo = this.getClass().getResource("ressources/photo/") + text_field_matricule.getText().replaceAll("/", "-") + "." + extension;
                    String url_photo = photo;
                    if (url_photo != null) {
                        label_photo.setIcon(new ImageIcon(url_photo));
                    }
                }
            } catch (IOException ex) {
            }
        }
    }

    private void control_matricule() {
        int rang = 100;
        matricule = String.format("%05d", rang);
        while (getController().getEleveController().get(matricule) != null) {
            rang += 1;
            matricule = String.format("%05d", rang);
        }
        text_field_matricule.setText(matricule);
    }

    private void action_cancel_button() {
        dispose();
    }

    private void init_combo_box_nationalite() {
        combo_box_nationalite.removeAllItems();
        id_nationalites.clear();
        try {
            ArrayList<Nationalite> list = getController().getNationaliteController().gets();
            for (int i = 0; i < list.size(); i++) {
                Nationalite nationalite = list.get(i);
                combo_box_nationalite.addItem(nationalite.getNationalite());
                id_nationalites.put(i, nationalite.getId());
            }
        } catch (Exception e) {
            combo_box_nationalite.removeAllItems();
            id_nationalites.clear();
        }
    }

    private void init_combo_box_annee() {
        combo_box_annee.removeAllItems();
        id_annees.clear();
        try {
            ArrayList<Annee> list = getController().getAnneeController().gets();
            for (int i = 0; i < list.size(); i++) {
                combo_box_annee.addItem(list.get(i).getAnnee());
                id_annees.put(i, list.get(i).getId());
            }
        } catch (Exception e) {
            combo_box_annee.removeAllItems();
            id_annees.clear();
        }
    }

    private void init_combo_box_cycle() {
        combo_box_cycle.removeAllItems();
        id_cycles.clear();
        try {
            ArrayList<Cycle> list = getController().getCycleController().gets();
            for (int i = 0; i < list.size(); i++) {
                combo_box_cycle.addItem(list.get(i).getCycle());
                id_cycles.put(i, list.get(i).getId());
            }
        } catch (Exception e) {
            combo_box_cycle.removeAllItems();
            id_cycles.clear();
        }
    }

    private void init_combo_box_classe() {
        combo_box_classe.removeAllItems();
        id_classes.clear();
        try {
            if (combo_box_annee.getSelectedIndex() < 0 || combo_box_cycle.getSelectedIndex() < 0) {
                return;
            }
            Long id_annee = id_annees.get(combo_box_annee.getSelectedIndex());
            Long id_cycle = id_cycles.get(combo_box_cycle.getSelectedIndex());
            ArrayList<Classe> list = getController().getClasseController().gets(id_annee, id_cycle);
            for (int i = 0; i < list.size(); i++) {
                combo_box_classe.addItem(list.get(i).getClasse());
                id_classes.put(i, list.get(i).getId());
            }
        } catch (Exception e) {
            combo_box_classe.removeAllItems();
            id_classes.clear();
        }
    }

    private void control_numero_table() {
        Long id_annee = id_annees.get(combo_box_annee.getSelectedIndex());
        Long id_cycle = id_cycles.get(combo_box_cycle.getSelectedIndex());
        Long id_classe = id_classes.get(combo_box_classe.getSelectedIndex());
        int numero = getController().getEleveClasseController().getEffectif(id_annee, id_cycle, id_classe, null);
        spinner_numero_table.setValue(numero + 1);
    }
}
