/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.dialog;

import bean.Classe;
import bean.Eleve;
import bean.EleveClasse;
import bean.MontantClasse;
import bean.Tranche;
import bean.Versement;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import static main.Main.getController;
import org.apache.commons.collections4.map.HashedMap;

/**
 *
 * @author Toukou Habi
 */
public class VersementDialog extends javax.swing.JDialog {

    public VersementDialog(java.awt.Frame parent, boolean modal, EleveClasse eleveClasse) {
        super(parent, modal);
        id_tranches = new HashedMap<>();
        this.eleveClasse = eleveClasse;
        this.versement = null;
        initComponents();
        Eleve eleve = getController().getEleveController().get(this.eleveClasse.getId_eleve());
        Classe classe = getController().getClasseController().get(this.eleveClasse.getId_classe());
        MontantClasse montantClasse = getController().getMontantClasseController().get(null, classe.getId());
        label_nom_prenom.setText("Nom et prénom : " + eleve.getNom_prenom());
        formattedTextField_montant_classe.setValue(montantClasse.getMontant());
        textField_reduction.setText("");
        formattedTextField_montant_classe.setEditable(false);
        formattedTextField_montant_a_payer.setEditable(false);
        init_combo_tranche();
        traitement();
    }

    public VersementDialog(java.awt.Frame parent, boolean modal, EleveClasse eleveClasse, Versement versement) {
        super(parent, modal);
        id_tranches = new HashedMap<>();
        this.eleveClasse = eleveClasse;
        this.versement = versement;
        initComponents();
        Eleve eleve = getController().getEleveController().get(this.eleveClasse.getId_eleve());
        Classe classe = getController().getClasseController().get(this.eleveClasse.getId_classe());
        MontantClasse montantClasse = getController().getMontantClasseController().get(null, classe.getId());
        label_nom_prenom.setText("Nom et prénom : " + eleve.getNom_prenom());
        formattedTextField_montant_classe.setValue(montantClasse.getMontant());
        textField_reduction.setText("");
        formattedTextField_montant_classe.setEditable(false);
        formattedTextField_montant_a_payer.setEditable(false);
        init_combo_tranche();
        traitement();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_nom_prenom = new javax.swing.JLabel();
        label_montant_classe = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboBox_tranche = new javax.swing.JComboBox<>();
        textField_reduction = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        button_cancel = new javax.swing.JButton();
        button_ok = new javax.swing.JButton();
        formattedTextField_montant_a_payer = new javax.swing.JFormattedTextField();
        formattedTextField_montant_classe = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nouveau paiement");
        setResizable(false);

        label_nom_prenom.setText("Nom et prénom :");

        label_montant_classe.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_montant_classe.setText("Montant classe :");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Tranche :");

        comboBox_tranche.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBox_tranche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBox_trancheActionPerformed(evt);
            }
        });

        textField_reduction.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textField_reductionKeyReleased(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Montant à payer :");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Réduction :");

        button_cancel.setText("Cancel");
        button_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_cancelActionPerformed(evt);
            }
        });

        button_ok.setText("OK");
        button_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_okActionPerformed(evt);
            }
        });

        formattedTextField_montant_a_payer.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));

        formattedTextField_montant_classe.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_nom_prenom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(button_ok)
                                .addGap(18, 18, 18)
                                .addComponent(button_cancel))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel4)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(33, 33, 33)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(formattedTextField_montant_a_payer)
                                    .addComponent(comboBox_tranche, 0, 200, Short.MAX_VALUE)
                                    .addComponent(textField_reduction)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label_montant_classe, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(formattedTextField_montant_classe, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_nom_prenom)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formattedTextField_montant_classe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_montant_classe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox_tranche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textField_reduction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formattedTextField_montant_a_payer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_cancel)
                    .addComponent(button_ok))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void comboBox_trancheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBox_trancheActionPerformed
        traitement();
    }//GEN-LAST:event_comboBox_trancheActionPerformed

    private void textField_reductionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField_reductionKeyReleased
        traitement();
    }//GEN-LAST:event_textField_reductionKeyReleased

    private void button_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_okActionPerformed
        action_ok_button();
    }//GEN-LAST:event_button_okActionPerformed

    private void button_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_cancelActionPerformed
        cancel();
    }//GEN-LAST:event_button_cancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    }
    private final EleveClasse eleveClasse;
    private final Versement versement;
    private final HashedMap<Integer, Long> id_tranches;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_cancel;
    private javax.swing.JButton button_ok;
    private javax.swing.JComboBox<String> comboBox_tranche;
    private javax.swing.JFormattedTextField formattedTextField_montant_a_payer;
    private javax.swing.JFormattedTextField formattedTextField_montant_classe;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel label_montant_classe;
    private javax.swing.JLabel label_nom_prenom;
    private javax.swing.JTextField textField_reduction;
    // End of variables declaration//GEN-END:variables

    private void init_combo_tranche() {
        comboBox_tranche.removeAllItems();
        id_tranches.clear();
        try {
            ArrayList<Tranche> list = getController().getTrancheController().gets();
            for (int i = 0; i < list.size(); i++) {
                Tranche tranche = list.get(i);
                comboBox_tranche.addItem(tranche.getTranche() + " " + tranche.getPourcentage() + "%");
                id_tranches.put(i, tranche.getId());
            }
        } catch (Exception e) {
            comboBox_tranche.removeAllItems();
            id_tranches.clear();
        }
    }

    private void traitement() {
        Double reduction;
        try {
            reduction = Double.valueOf(textField_reduction.getText());
        } catch (NumberFormatException e) {
            reduction = 0.0;
        }

        try {
            Tranche tranche = getController().getTrancheController().get(id_tranches.get(comboBox_tranche.getSelectedIndex()));
            Classe classe = getController().getClasseController().get(this.eleveClasse.getId_classe());
            MontantClasse montantClasse = getController().getMontantClasseController().get(null, classe.getId());
            Double somme_a_payer = montantClasse.getMontant() * tranche.getPourcentage() / 100 - reduction;
            formattedTextField_montant_a_payer.setValue(somme_a_payer);
        } catch (NullPointerException e) {
            formattedTextField_montant_a_payer.setValue(0.0);
        }

    }

    private void action_ok_button() {
        Long id_eleve = eleveClasse.getId_eleve();
        Long id_tranche = id_tranches.get(comboBox_tranche.getSelectedIndex());
        Long id_montant_classe = getController().getMontantClasseController().get(null, eleveClasse.getId_classe()).getId();
        Double montant = (Double) formattedTextField_montant_a_payer.getValue();
        Double reduction;
        try {
            reduction = Double.valueOf(textField_reduction.getText());
        } catch (NumberFormatException e) {
            reduction = 0.0;
        }
        Date date = new Date();
        if (versement == null) {
            if (getController().getVersementController().get(id_eleve, id_tranche, id_montant_classe) != null) {
                JOptionPane.showMessageDialog(this, "Cette tranche est déjà payée pour ce élève !", "Payée !", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            MontantClasse montantClasse = getController().getMontantClasseController().get(id_montant_classe);
            Classe classe = getController().getClasseController().get(montantClasse.getId_classe());
            ArrayList<Versement> list = getController().getVersementController().gets(id_eleve, classe.getId_annee(), classe.getId_cycle(), classe.getId(), null, null, null);
            Double somme_pourcentage_payé = 0.0;
            for (int i = 0; i < list.size(); i++) {
                Versement vers = list.get(i);
                Tranche tranche = getController().getTrancheController().get(vers.getId_tranche());
                somme_pourcentage_payé += tranche.getPourcentage();
            }
            Tranche tranche = getController().getTrancheController().get(id_tranche);
            somme_pourcentage_payé += tranche.getPourcentage();
            if (somme_pourcentage_payé > 100.) {
                JOptionPane.showMessageDialog(this, "Impossible de choisir la tranche! des versements ont été déjà éffectuer", "Pourcentage excèdé !", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            getController().getVersementController().add(
                    id_eleve,
                    id_tranche,
                    id_montant_classe,
                    date,
                    montant,
                    reduction
            );
        } else {
            getController().getVersementController().update(
                    versement.getId(),
                    id_eleve,
                    id_tranche,
                    id_montant_classe,
                    date,
                    montant,
                    reduction
            );
        }
        JOptionPane.showMessageDialog(this, "Opération effectuée avec success ", "Réussie !", JOptionPane.INFORMATION_MESSAGE);
        dispose();
    }

    private void cancel() {
        dispose();
    }
}
