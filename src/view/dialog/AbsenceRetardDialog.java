/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/OkCancelDialog.java to edit this template
 */
package view.dialog;

import bean.Absence;
import bean.Classe;
import bean.Eleve;
import bean.EleveClasse;
import bean.Retard;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import static main.Main.getController;

/**
 *
 * @author Toukou Habi
 */
public class AbsenceRetardDialog extends javax.swing.JDialog {

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;

    /**
     * Creates new form EleveClasseDialog
     *
     * @param parent
     * @param modal
     */
    public AbsenceRetardDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.list_eleve_classes = null;
        id_sanction = null;
        initComponents();
        date_chooser.setDate(new Date());
        table_eleve();
        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });

    }

    public AbsenceRetardDialog(java.awt.Frame parent, boolean modal, ArrayList<EleveClasse> list) {
        super(parent, modal);
        this.list_eleve_classes = list;
        id_sanction = null;
        initComponents();
        date_chooser.setDate(new Date());
        table_eleve();
        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });

    }

    public AbsenceRetardDialog(java.awt.Frame parent, boolean modal, Long id, String sanction) {
        super(parent, modal);
        this.list_eleve_classes = new ArrayList<>();
        id_sanction = id;
        initComponents();
        comboBox_absence_retard.setSelectedItem(sanction);
        if ("Absence".equals(comboBox_absence_retard.getSelectedItem().toString())) {
            Absence absence = getController().getAbsenceController().get(id);
            list_eleve_classes.add(getController().getEleveClasseController().get(absence.getId_eleve_classe()));
            date_chooser.setDate(absence.getDate());
            textArea.setText(absence.getCommentaire());
        } else {
            Retard retard = getController().getRetardController().get(id);
            list_eleve_classes.add(getController().getEleveClasseController().get(retard.getId_eleve_classe()));
            date_chooser.setDate(retard.getDate());
            textArea.setText(retard.getCommentaire());
        }
        table_eleve();
        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
        comboBox_absence_retard.setEnabled(false);
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_eleve = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        comboBox_absence_retard = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        date_chooser = new com.toedter.calendar.JDateChooser();

        setTitle("Elève classe");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        table_eleve.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "N°", "Classe", "Matricule", "Nom et Prénom"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_eleve);
        if (table_eleve.getColumnModel().getColumnCount() > 0) {
            table_eleve.getColumnModel().getColumn(0).setMinWidth(35);
            table_eleve.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_eleve.getColumnModel().getColumn(0).setMaxWidth(35);
            table_eleve.getColumnModel().getColumn(1).setMinWidth(100);
            table_eleve.getColumnModel().getColumn(1).setPreferredWidth(100);
            table_eleve.getColumnModel().getColumn(1).setMaxWidth(100);
            table_eleve.getColumnModel().getColumn(2).setMinWidth(100);
            table_eleve.getColumnModel().getColumn(2).setPreferredWidth(100);
            table_eleve.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        jLabel1.setText("Sanction :");

        comboBox_absence_retard.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Absence", "Retard" }));

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane2.setViewportView(textArea);

        jLabel2.setText("Commentaire :");

        jLabel3.setText("Date :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cancelButton))
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboBox_absence_retard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(date_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(comboBox_absence_retard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addComponent(date_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        getRootPane().setDefaultButton(okButton);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        valider();
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            AbsenceRetardDialog dialog = new AbsenceRetardDialog(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    private final ArrayList<EleveClasse> list_eleve_classes;
    private final Long id_sanction;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> comboBox_absence_retard;
    private com.toedter.calendar.JDateChooser date_chooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton okButton;
    private javax.swing.JTable table_eleve;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;

    private void table_eleve() {
        try {
            DefaultTableModel model = (DefaultTableModel) table_eleve.getModel();
            model.setRowCount(0);
            if (list_eleve_classes != null) {
                for (int i = 0; i < list_eleve_classes.size(); i++) {
                    Object row[] = new Object[4];
                    Eleve eleve = getController().getEleveController().get(list_eleve_classes.get(i).getId_eleve());
                    Classe classe = getController().getClasseController().get(list_eleve_classes.get(i).getId_classe());
                    row[0] = i + 1;
                    row[1] = classe.getClasse();
                    row[2] = eleve.getMatricule();
                    row[3] = eleve.getNom_prenom();
                    model.addRow(row);
                }
            }
            table_eleve.setModel(model);
            table_eleve.setShowVerticalLines(true);
            table_eleve.setShowHorizontalLines(true);
        } catch (NullPointerException e) {
        }
    }

    private void valider() {
        if (id_sanction == null) {
            if (list_eleve_classes != null) {
                if ("Absence".equals(comboBox_absence_retard.getSelectedItem().toString())) {
                    for (int i = 0; i < list_eleve_classes.size(); i++) {
                        EleveClasse eleveClasse = list_eleve_classes.get(i);
                        getController().getAbsenceController().add(eleveClasse.getId(), new java.sql.Timestamp(date_chooser.getDate().getTime()), textArea.getText());
                    }
                } else {
                    for (int i = 0; i < list_eleve_classes.size(); i++) {
                        EleveClasse eleveClasse = list_eleve_classes.get(i);
                        getController().getRetardController().add(eleveClasse.getId(), new java.sql.Timestamp(date_chooser.getDate().getTime()), textArea.getText());
                    }
                }
            }
        } else {
            if (list_eleve_classes != null) {
                if ("Absence".equals(comboBox_absence_retard.getSelectedItem().toString())) {
                    for (int i = 0; i < list_eleve_classes.size(); i++) {
                        EleveClasse eleveClasse = list_eleve_classes.get(i);
                        getController().getAbsenceController().update(
                                id_sanction,
                                eleveClasse.getId(),
                                new java.sql.Timestamp(date_chooser.getDate().getTime()),
                                textArea.getText()
                        );
                    }
                } else {
                    for (int i = 0; i < list_eleve_classes.size(); i++) {
                        EleveClasse eleveClasse = list_eleve_classes.get(i);
                        getController().getRetardController().update(
                                id_sanction,
                                eleveClasse.getId(),
                                new java.sql.Timestamp(date_chooser.getDate().getTime()),
                                textArea.getText()
                        );
                    }
                }
            }
        }

        JOptionPane.showMessageDialog(this, "Opération effectuée avec success ", "Réussie !", JOptionPane.INFORMATION_MESSAGE);
    }
}
